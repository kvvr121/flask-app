version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Installing dependencies...
      - pip install --upgrade pip
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 954747465428.dkr.ecr.us-west-2.amazonaws.com
      - echo Build started on date
      - REPOSITORY_URI=954747465428.dkr.ecr.us-west-2.amazonaws.com/flask-app-repo
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Image URI: $REPOSITORY_URI:$IMAGE_TAG
      - echo Running unit tests...
      - python -m pytest tests/ --junitxml=pytest-report.xml || true

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t flask-app:$IMAGE_TAG -f Dockerfile.prod .
      - docker tag flask-app:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag flask-app:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on date
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"flask-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - pytest-report.xml
  name: flask-app-$(date +%Y-%m-%d)

cache:
  paths:
    - '/root/.cache/pip/**/*'
